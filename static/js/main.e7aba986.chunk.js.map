{"version":3,"sources":["chess.js","App.js","serviceWorker.js","index.js"],"names":["fileNumberToName","fileNumber","String","fromCharCode","fileNameToNumber","fileName","charCodeAt","rankNumberToName","rankNumber","rankNameToNumber","rankName","symbolToColour","symbol","includes","positionFromNames","positionFromNumbers","MOVE_HISTORY","App","props","moves","localStorage","getItem","state","board","doMoves","error","re","moveList","split","filter","m","test","move","exec","whiteMove","blackMove","movePiece","this","setState","prevProps","prevState","setItem","className","map","rank","key","piece","value","onChange","e","target","message","React","Component","reMove","isBlack","fromPos","fromFileName","fromRankName","toFileName","toRankName","pieceName","black","pieceNameToSymbol","toPos","isValidMove","Error","out","pos","push","findPieces","find","p","from","to","fromPieceSymbol","toPieceSymbol","fromColour","fromPieceName","pieceSymbolToName","deltaRank","deltaFile","absDeltaRank","Math","abs","absDeltaFile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7aba986.chunk.js","sourcesContent":["\r\n/**\r\n * @typedef Position\r\n * @prop {string} fileName\r\n * @prop {string} rankName\r\n * @prop {number} fileNumber\r\n * @prop {number} rankNumber\r\n */\r\n\r\nexport function makeBoard() {\r\n    return [\r\n        ['♜', '♞', '♝', '♚', '♛', '♝', '♞', '♜'],\r\n        ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'],\r\n        ['♖', '♘', '♗', '♔', '♕', '♗', '♘', '♖']\r\n    ];\r\n}\r\n\r\n\r\n/** @param {number} fileNumber */\r\nexport function fileNumberToName (fileNumber) {\r\n    return String.fromCharCode(0x61 + fileNumber);\r\n}\r\n\r\n/** @param {string} fileName */\r\nexport function fileNameToNumber (fileName) {\r\n    return fileName.charCodeAt(0) - 0x61;\r\n}\r\n\r\n/** @param {number} rankNumber */\r\nexport function rankNumberToName (rankNumber) {\r\n    return String(8 - rankNumber);\r\n}\r\n\r\n/** @param {string} rankName */\r\nexport function rankNameToNumber (rankName) {\r\n    return 8 - +rankName;\r\n}\r\n\r\n/**\r\n * @param {string} pieceName\r\n */\r\nexport function pieceNameToSymbol (pieceName, black=false) {\r\n    switch (pieceName) {\r\n    case \"K\": return black ? \"♛\" : \"♕\";\r\n    case \"Q\": return black ? \"♚\" : \"♔\";\r\n    case \"B\": return black ? \"♝\" : \"♗\";\r\n    case \"N\": return black ? \"♞\" : \"♘\";\r\n    case \"R\": return black ? \"♜\" : \"♖\";\r\n    default: return black ? \"♟\" : \"♙\";\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} symbol\r\n */\r\nexport function pieceSymbolToName (symbol) {\r\n    switch (symbol) {\r\n    case \"♛\":\r\n    case \"♕\":\r\n        return \"K\";\r\n    case \"♚\":\r\n    case \"♔\":\r\n        return \"Q\";\r\n    case \"♝\":\r\n    case \"♗\":\r\n        return \"B\";\r\n    case \"♞\":\r\n    case \"♘\":\r\n    return \"N\";\r\n    case \"♜\":\r\n    case \"♖\":\r\n        return \"R\";\r\n    case \"♟\":\r\n    case \"♙\":\r\n        return \"\";\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @param {string} symbol\r\n */\r\nexport function symbolToColour (symbol) {\r\n    if (['♜','♞','♝','♚','♛','♟'].includes(symbol)) return \"black\";\r\n    if (['♖','♘','♗','♔','♕','♙'].includes(symbol)) return \"white\";\r\n}\r\n\r\n/**\r\n * @param {string} fileName\r\n * @param {string} rankName\r\n * @returns {Position}\r\n */\r\nexport function positionFromNames (fileName, rankName) {\r\n    return {\r\n        fileName,\r\n        rankName,\r\n        fileNumber: fileNameToNumber(fileName),\r\n        rankNumber: rankNameToNumber(rankName),\r\n    };\r\n}\r\n\r\n/**\r\n * @param {number} fileNumber\r\n * @param {number} rankNumber\r\n * @returns {Position}\r\n */\r\nexport function positionFromNumbers (fileNumber, rankNumber) {\r\n    return {\r\n        fileNumber,\r\n        rankNumber,\r\n        fileName: fileNumberToName(fileNumber),\r\n        rankName: rankNumberToName(rankNumber),\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { makeBoard, fileNumberToName, pieceNameToSymbol, rankNameToNumber, fileNameToNumber, rankNumberToName, symbolToColour, pieceSymbolToName, positionFromNames, positionFromNumbers } from './chess';\r\n\r\nconst MOVE_HISTORY = \"chess_move_history\";\r\n\r\n/** @typedef {import('./chess').Position} Position */\r\n\r\nexport default class App extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    const moves = localStorage.getItem(MOVE_HISTORY) || \"\";\r\n\r\n    this.state = {\r\n      board: this.doMoves(moves),\r\n      moves,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  doMoves (moves) {\r\n    const re = /^\\d+\\. *([^ ]+)(?: +([^ ]+))?/\r\n    const moveList = moves.split(\"\\n\").filter(m => re.test(m));\r\n\r\n    const board = makeBoard();\r\n\r\n    try {\r\n      for (const move of moveList) {\r\n        const [ _, whiteMove, blackMove] = re.exec(move);\r\n\r\n        movePiece(board, whiteMove, false);\r\n\r\n        if (blackMove) {\r\n          movePiece(board, blackMove, true);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error });\r\n    }\r\n\r\n    return board;\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    localStorage.setItem(MOVE_HISTORY, this.state.moves);\r\n    if (this.state.moves !== prevState.moves) {\r\n      const board = this.doMoves(this.state.moves);\r\n      this.setState({ board });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <table className=\"App-Board\">\r\n          <tbody>\r\n          {\r\n            this.state.board.map((rank,rankNumber) => (\r\n              <tr key={rankNumber + 1}>\r\n                {\r\n                  rank.map((piece, fileNumber) => {\r\n                    const className = (rankNumber % 2 + fileNumber) % 2 ? \"black-square\" : \"white-square\";\r\n                    return <td key={fileNumberToName(fileNumber)} className={className}>{piece}</td>;\r\n                  })\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n          </tbody>\r\n        </table>\r\n        <textarea className=\"App-moves\" value={this.state.moves} onChange={e=>this.setState({ moves: e.target.value, error: null })} />\r\n        { this.state.error && <div className=\"App-error\">{ this.state.error.message }</div> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst reMove = /([KQBNR]?)([a-h]?)([1-8]?)([a-h])([1-8])/;\r\nfunction movePiece (board, move, isBlack=false) {\r\n  if (reMove.test(move)) {\r\n    let [_, piece, fromFileName, fromRankName, toFileName, toRankName] = reMove.exec(move);\r\n\r\n    const symbol = pieceNameToSymbol(piece, isBlack);\r\n\r\n    let fromPos;\r\n    const toPos = positionFromNames(toFileName, toRankName);\r\n\r\n    if (fromFileName && fromRankName) {\r\n      fromPos = positionFromNames(fromFileName, fromRankName);\r\n\r\n      if (!isValidMove(board, fromPos, toPos)) {\r\n        throw Error(`Invalid Move: ${symbol}: ${fromFileName}${fromRankName} -> ${toFileName}${toRankName}`);\r\n      }\r\n    } else {\r\n      fromPos = findPieces(board, symbol, fromFileName, fromRankName).find(p => isValidMove(board, p, toPos));\r\n\r\n      if (!fromPos) {\r\n        throw Error(`Invalid Move: ${symbol}: -> ${toFileName}${toRankName}`);\r\n      }\r\n\r\n      fromFileName = fromPos.fileName;\r\n      fromRankName = fromPos.rankName;\r\n    }\r\n\r\n    board[fromPos.rankNumber][fromPos.fileNumber] = '';\r\n    board[toPos.rankNumber][toPos.fileNumber] = symbol;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {string[][]} board\r\n * @param {string} symbol\r\n * @returns {Position[]}\r\n */\r\nfunction findPieces (board, symbol, fileName=\"\", rankName=\"\") {\r\n  const out = [];\r\n\r\n  if (fileName && rankName) {\r\n    const pos = positionFromNames(fileName, rankName);\r\n\r\n    if (board[pos.rankNumber][pos.fileNumber]) {\r\n      out.push(pos);\r\n    }\r\n  } else if (fileName) {\r\n    const fileNumber = fileNameToNumber(fileName);\r\n\r\n    for (let rankNumber = 0; rankNumber < 8; rankNumber++) {\r\n      if (board[rankNumber][fileNumber] === symbol) {\r\n        out.push(positionFromNumbers(fileNumber, rankNumber));\r\n      }\r\n    }\r\n  } else if (rankName) {\r\n    const rankNumber = rankNameToNumber(rankName);\r\n\r\n    for (let fileNumber = 0; fileNumber < 8; fileNumber++) {\r\n      if (board[rankNumber][fileNumber] === symbol) {\r\n        out.push(positionFromNumbers(fileNumber, rankNumber));\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    for (let rankNumber = 0; rankNumber < 8; rankNumber++) {\r\n      for (let fileNumber = 0; fileNumber < 8; fileNumber++) {\r\n        if (board[rankNumber][fileNumber] === symbol) {\r\n          out.push(positionFromNumbers(fileNumber, rankNumber));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string[][]} board\r\n * @param {Position} from\r\n * @param {Position} to\r\n */\r\nfunction isValidMove (board, from, to) {\r\n  const fromPieceSymbol = board[from.rankNumber][from.fileNumber];\r\n  const toPieceSymbol = board[to.rankNumber][to.fileNumber];\r\n\r\n  if (!fromPieceSymbol) return false;\r\n\r\n  const fromColour = symbolToColour(fromPieceSymbol);\r\n  const toColour = symbolToColour(toPieceSymbol);\r\n\r\n  if (fromColour === toColour) return false;\r\n\r\n  const fromPieceName = pieceSymbolToName(fromPieceSymbol);\r\n\r\n  const deltaRank = to.rankNumber - from.rankNumber;\r\n  const deltaFile = to.fileNumber - from.fileNumber;\r\n  const absDeltaRank = Math.abs(deltaRank);\r\n  const absDeltaFile = Math.abs(deltaFile);\r\n\r\n  switch (fromPieceName) {\r\n    //pawn\r\n    case \"\": {\r\n      // When taking file must be different\r\n      if (toPieceSymbol) {\r\n        return absDeltaFile === 1 && absDeltaRank === 1;\r\n      }\r\n\r\n      // Unless taking a piece pawns must remain in the same file\r\n      if (from.fileName !== to.fileName) return false;\r\n\r\n      if (fromColour === \"white\") {\r\n        if (from.rankName === \"2\" && deltaRank === -2) return true;\r\n        return deltaRank === -1 && Math.abs(deltaFile) <= 1;\r\n      } else if (fromColour === \"black\") {\r\n        if (from.rankName === \"7\" && deltaRank === 2) return true;\r\n        return deltaRank === 1 && Math.abs(deltaFile) <= 1;\r\n      }\r\n\r\n      break;\r\n    }\r\n    // Queen\r\n    case \"Q\": {\r\n      return isPathClear(board, from, to) && (deltaRank === 0 || deltaFile === 0 || absDeltaRank === absDeltaFile);\r\n    }\r\n    // Knight\r\n    case \"N\": {\r\n      return (absDeltaFile === 2 && absDeltaRank === 1) || (absDeltaFile === 1 && absDeltaRank === 2);\r\n    }\r\n    // Rook\r\n    case \"R\": {\r\n      return isPathClear(board, from, to) && (deltaRank === 0 || deltaFile === 0);\r\n    }\r\n    // King\r\n    case \"K\": {\r\n      return absDeltaRank <= 1 && absDeltaFile <= 1;\r\n    }\r\n    // Bishop\r\n    case \"B\": {\r\n      return isPathClear(board, from, to) && absDeltaRank === absDeltaFile;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isPathClear (board, from, to) {\r\n  return true;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}